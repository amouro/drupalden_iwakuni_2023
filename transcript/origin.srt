1
00:00:04,204 --> 00:00:06,539
こんにちは、クリスと申します。

2
00:00:06,539 --> 00:00:14,014
今日はDrupalDEN岩国でスペシャルトークをすることになり、光栄です。

3
00:00:14,014 --> 00:00:18,918
今日は沖縄科学技術大学院大学の

4
00:00:19,319 --> 00:00:23,023
リニューアルされたウェブサイトを発表します。

5
00:00:24,491 --> 00:00:30,063
英語で技術的な内容を発表した方がやりやすいのですが、

6
00:00:30,764 --> 00:00:38,505
それでも後で日本語でお話しして、ご意見をいただくのが楽しみです。

7
00:00:41,641 --> 00:00:44,177
こんにちは、クリスと申します

8
00:00:44,310 --> 00:00:46,679
本日、DrupalDEN岩国で特別講演を

9
00:00:46,679 --> 00:00:49,049
させていただくことを光栄に思います。

10
00:00:49,682 --> 00:00:51,818
本学OISTでは

11
00:00:52,018 --> 00:00:55,488
Drupal 7のリリース初年度の2011年にサイトを構築しました。

12
00:00:55,655 --> 00:00:58,058
サイトを構築しました。

13
00:00:58,591 --> 00:01:02,862
Drupal 7はすべてのDrupalのバージョンの中で最も長い寿命を持ち、

14
00:01:03,063 --> 00:01:07,467
プラットフォームに大きな変化をもたらしました。

15
00:01:08,001 --> 00:01:09,402
これらの変更の1つは、

16
00:01:09,402 --> 00:01:14,107
Content TypeのエンティティフィールドとしてCCKが統合され、

17
00:01:14,707 --> 00:01:17,877
Viewsがコアにもたらされたことです。

18
00:01:17,944 --> 00:01:22,549
さらに、ImageCacheはImage Styleに生まれ変わりました。

19
00:01:22,916 --> 00:01:23,983
昨年、

20
00:01:24,250 --> 00:01:27,220
私たちはDrupal 9を使用して

21
00:01:27,220 --> 00:01:30,223
ウェブサイトを再構築するための2年間の旅を経験しました。

22
00:01:31,691 --> 00:01:32,992
講演の前半では、

23
00:01:32,992 --> 00:01:36,830
Webサイトの再構築の際に行った開発と

24
00:01:36,830 --> 00:01:40,033
プロジェクト管理のプロセスについて説明します。

25
00:01:40,834 --> 00:01:42,669
第二部では

26
00:01:42,869 --> 00:01:48,641
英語と日本語のバイリンガルに向けたウェブサイトのローカライズで

27
00:01:48,708 --> 00:01:52,445
直面した課題について、より深く掘り下げます。

28
00:01:53,146 --> 00:01:57,851
また、単なる翻訳にとどまらず、どのような問題に直面したのか。

29
00:01:57,851 --> 00:02:01,754
どのように対処し、ユーザーに最高のユーザーエクスペリエンスを

30
00:02:01,754 --> 00:02:03,590
提供したかをお話しします。

31
00:02:06,092 --> 00:02:06,960
まず、

32
00:02:06,993 --> 00:02:08,995
僕のことを少しご紹介します。

33
00:02:09,262 --> 00:02:13,933
私はDrupalの開発者で、14年の経験があります。

34
00:02:15,135 --> 00:02:17,036
繁体字中国語、日本語、英語での

35
00:02:17,036 --> 00:02:23,042
ウェブデザインと開発の経験が豊富です。

36
00:02:23,309 --> 00:02:25,745
Drupalコミュニティのメンバーでもあり、

37
00:02:25,745 --> 00:02:29,883
台湾の元グループリーダーでもあります。

38
00:02:30,483 --> 00:02:31,518
Drupal以外では、

39
00:02:31,518 --> 00:02:35,722
コーヒー、ドイツ、猫に興味があり、

40
00:02:35,722 --> 00:02:39,192
これらのトピックについての会話も歓迎します。

41
00:02:40,093 --> 00:02:41,861
本題に入る前に

42
00:02:41,961 --> 00:02:44,898
この講演でベンダーやサービスについての言及があっても、

43
00:02:44,898 --> 00:02:48,935
それを推奨するものではないことにご了承ください。

44
00:02:49,869 --> 00:02:52,572
Drupal 7の旧サイトは、私たちによく貢献してくれました。

45
00:02:52,572 --> 00:03:00,513
3,000万人以上の訪問者と37,000のコンテンツを提供しました。

46
00:03:01,047 --> 00:03:04,984
この3年間で月間の訪問者数が2倍になりました。

47
00:03:06,019 --> 00:03:09,556
このサイトでは、私たちの成果を世界に発信しています。

48
00:03:09,556 --> 00:03:14,027
例えば、新しい研究棟が完成したとき。

49
00:03:14,127 --> 00:03:17,330
Nature誌で高い影響力を持つランキングを獲得したとき。

50
00:03:17,330 --> 00:03:21,768
ノーベル賞受賞などの成果を世界に発信しました。

51
00:03:22,769 --> 00:03:26,673
私たちの成功を継続的に祝うサイトです。

52
00:03:27,440 --> 00:03:30,810
しかし、私たちはこれからもイノベーションに努め、

53
00:03:30,810 --> 00:03:34,814
日本の研究の未来を切り開いていきます。

54
00:03:35,215 --> 00:03:38,451
これらの目標を達成するために

55
00:03:38,451 --> 00:03:38,518



56
00:03:38,518 --> 00:03:40,653
新しい目標を設定し、

57
00:03:40,653 --> 00:03:44,791
より効果的で柔軟な方法で成果を

58
00:03:44,791 --> 00:03:48,094
出せる新しいウェブサイトが必要でした。

59
00:03:49,095 --> 00:03:55,034
2020年、沖縄科学技術大学院大学は戦略計画を定め

60
00:03:55,034 --> 00:03:57,770
活動の3本柱を重視するようになりました：

61
00:03:57,770 --> 00:04:01,574
研究、教育、そしてイノベーション。

62
00:04:01,841 --> 00:04:06,312
また、STEM教育への関心を高め、

63
00:04:06,312 --> 00:04:08,181
沖縄に貢献することも私たちの責務です。

64
00:04:08,181 --> 00:04:12,352
そして、日本社会へのアウトリーチ活動も私たちの責務です。

65
00:04:12,585 --> 00:04:14,454
プロジェクト全体を通して

66
00:04:14,454 --> 00:04:17,624
この3つの柱を常に意識しています。

67
00:04:17,690 --> 00:04:24,597
Webサイトが組織の戦略に合致するようにしました。

68
00:04:25,064 --> 00:04:26,899
技術的な面では、

69
00:04:26,899 --> 00:04:31,537
編集者のコンテンツ管理体験を向上させることが目標でした。

70
00:04:31,938 --> 00:04:33,640
Drupal 9では、

71
00:04:33,640 --> 00:04:37,176
メディアライブラリを使ってアセットを管理できるようになりました。

72
00:04:37,410 --> 00:04:41,748
また、ノードの翻訳方法をフィールド翻訳に変更しました。

73
00:04:42,282 --> 00:04:43,449
また、Drupalだけでなく、

74
00:04:43,449 --> 00:04:46,252
ユーザーエクスペリエンスの一貫性を保つために

75
00:04:46,252 --> 00:04:49,756
デザインシステムを導入し、

76
00:04:49,756 --> 00:04:51,557
編集者がコンテンツを作成する際に

77
00:04:51,557 --> 00:04:56,095
Webコンポーネントを簡単に再利用できるようにしています。

78
00:04:56,429 --> 00:05:00,266
Webサイトプロジェクトは、大きく3つのフェーズに分かれていました。

79
00:05:00,533 --> 00:05:06,539
2020年12月にベンダーと共同で包括的なユーザー調査を実施し、

80
00:05:06,539 --> 00:05:13,179
ステークホルダーと社内外のユーザーへの理解を深めました。

81
00:05:13,279 --> 00:05:15,148
この調査により、ユーザーが私たちをどのように

82
00:05:15,148 --> 00:05:17,350
認識しているのかが明らかになりました。

83
00:05:17,583 --> 00:05:19,052
と、ウェブサイトの情報アーキテクチャを

84
00:05:19,052 --> 00:05:21,688
どのように改善すればよいかを明らかにしました。

85
00:05:22,955 --> 00:05:25,591
第2フェーズでは Drupal 9を使用した新しいWebサイトの構築と

86
00:05:25,591 --> 00:05:29,395
コンテンツの移行を別のベンダーに依頼しました。

87
00:05:29,862 --> 00:05:32,799
ベンダーが開発を完了した後、

88
00:05:32,965 --> 00:05:35,735
当社のウェブチームがコンテンツを引き継ぎました。

89
00:05:36,035 --> 00:05:38,738
私たちはそれを変換してコンテンツを作り直し、

90
00:05:38,738 --> 00:05:41,074
コンテンツ所有者に新しいウェブサイトの

91
00:05:41,074 --> 00:05:44,077
使い方をトレーニングしています。

92
00:05:44,811 --> 00:05:50,283
また、開発者と私は、更新作業と追加問題の解決に取り組みます。

93
00:05:51,250 --> 00:05:55,555
プロジェクト開始から2年後の昨年12月、

94
00:05:55,555 --> 00:05:59,258
無事リニューアルを果たしました。

95
00:05:59,525 --> 00:06:02,695
OISTのコミュニティからも好評をいただいています。

96
00:06:03,730 --> 00:06:06,733
それでは、早速サイトを覗いてみましょう。

97
00:06:07,500 --> 00:06:09,435
カラースキームを再定義し、

98
00:06:09,435 --> 00:06:12,505
サイト全体に新しいウェブコンポーネントを使用しました。

99
00:06:13,673 --> 00:06:17,810
メガメニューは、ユーザーにより良いナビゲーションマップを提供します。

100
00:06:20,012 --> 00:06:21,347
メディア・エディターは、

101
00:06:21,347 --> 00:06:23,850
関連コンテンツを手動で選択することも、

102
00:06:23,850 --> 00:06:27,453
システムに関連コンテンツを選択させることも可能です。

103
00:06:31,324 --> 00:06:34,093
フリッカーをサイトに統合し

104
00:06:34,127 --> 00:06:37,797
ユーザーが写真集をプレビューできるようにしました。

105
00:06:39,565 --> 00:06:42,435
さまざまなキャンペーンや特別委員会のために、

106
00:06:42,568 --> 00:06:44,604
マイクロサイト機能を設け、

107
00:06:44,704 --> 00:06:49,976
独自のコンテンツを管理し、独自のロゴを表示できるようにしました。

108
00:06:52,945 --> 00:06:55,748
最後に、私たちがウェブサイトのために

109
00:06:55,748 --> 00:07:00,453
デザインしたコンポーネントを紹介するスタイルガイドも作成しました。

110
00:07:08,795 --> 00:07:12,532
さて、次は技術的な面です。

111
00:07:12,565 --> 00:07:14,834
ここでは、マイグレーションプロセスの概要と、

112
00:07:14,834 --> 00:07:19,472
開発プロジェクトの管理方法について説明したいと思います。

113
00:07:19,972 --> 00:07:21,073
マイグレーションは、

114
00:07:21,073 --> 00:07:24,243
私たちのプロジェクトにおいて最初にして最も重要な要素でした。

115
00:07:24,343 --> 00:07:28,247
重要なコンテンツや資産はすべて移行する必要があります。

116
00:07:28,414 --> 00:07:31,184
コンテンツノードの移行だけでなく、

117
00:07:31,184 --> 00:07:36,989
CMSで管理されていないファイルや画像も移行する必要がありました。

118
00:07:37,390 --> 00:07:40,460
Drupal 7 では。Media Libraryがありませんでした。

119
00:07:40,460 --> 00:07:42,328
そのため、アセットを格納するために

120
00:07:42,328 --> 00:07:46,232
「video」と「photo」コンテンツタイプを使用しました。

121
00:07:46,232 --> 00:07:51,671
そして、コンテンツ本文の中でショートコードを使ってそれらを参照していました。

122
00:07:52,538 --> 00:07:57,510
つまり、まず3,000のコンテンツノードと

123
00:07:57,510 --> 00:08:01,280
6,000以上のメディアアセットをすべて移行する必要がありました。

124
00:08:01,347 --> 00:08:04,150
そして、インラインのショートコードをすべて

125
00:08:04,150 --> 00:08:06,486
新しいメディア埋め込み形式に変換する必要がありました。

126
00:08:07,086 --> 00:08:08,254
これまでコンテンツエディターは、

127
00:08:08,654 --> 00:08:11,324
IMCEを利用してファイルや画像を

128
00:08:11,324 --> 00:08:15,361
直接サーバーにアップロードすることができました。

129
00:08:15,695 --> 00:08:16,929
今回の移行では、

130
00:08:16,929 --> 00:08:21,801
1,500以上のインラインファイルソースをメディアタイプに変換しました。

131
00:08:21,868 --> 00:08:25,271
これには画像、ドキュメント、埋め込み動画が含まれます。

132
00:08:25,271 --> 00:08:29,876
これにより、すべてのファイルが管理されたシステム内にあることが保証されるだけでなく、

133
00:08:29,876 --> 00:08:33,646
システムの安全性も向上しました。

134
00:08:34,046 --> 00:08:37,850
Drupal Migrate APIスクリプトを利用して、

135
00:08:37,850 --> 00:08:41,354
合計で10,000以上のコンテンツやアセットを移行しています。

136
00:08:41,454 --> 00:08:42,822
移行プロファイルは、

137
00:08:42,822 --> 00:08:46,392
テスト目的のモックアップデータを提供するために、

138
00:08:46,392 --> 00:08:48,528
プロジェクトで使い続けました。

139
00:08:49,128 --> 00:08:53,599
各新機能の開発中ローカル環境とクラウドCI環境では、

140
00:08:53,599 --> 00:08:57,803
毎回モックアップデータを使用してサイトを構築しています。

141
00:08:58,304 --> 00:09:02,174
これにより、ユニットテストを繰り返し実行し、

142
00:09:02,508 --> 00:09:07,146
より堅牢で信頼性の高いデプロイメントを実現することができました。

143
00:09:07,747 --> 00:09:10,316
移行はプロジェクトにとって重要であり、

144
00:09:10,449 --> 00:09:16,022
内容の確認や結果の検証に多くの労力を要しました。

145
00:09:16,022 --> 00:09:17,924
しかし、その価値はあり、

146
00:09:17,990 --> 00:09:21,961
プロジェクトの成功に重要な役割を果たしました。

147
00:09:22,395 --> 00:09:23,729
移行にとどまらず、

148
00:09:23,829 --> 00:09:27,934
プロジェクトを成功に導いた3つの鍵があります。

149
00:09:28,501 --> 00:09:34,307
私たちは、チームと上司に進捗状況を常に伝えるようにしました。

150
00:09:34,473 --> 00:09:38,277
OISTは大きな組織であり、多くの意思決定ルートがあります。

151
00:09:38,277 --> 00:09:42,114
そのため、必要に応じてステークホルダーと直接面談を行いました。

152
00:09:42,114 --> 00:09:44,517
また、適切なルートでサポートし、

153
00:09:44,517 --> 00:09:47,720
コミュニケーションを取れる人を探しました。

154
00:09:49,589 --> 00:09:53,192
プロジェクトのタスクを管理し、

155
00:09:53,192 --> 00:09:56,195
コミュニケーションを支援するツールを効果的に使っています。

156
00:09:57,196 --> 00:09:58,297
ベストなツールはありませんが、

157
00:09:58,297 --> 00:10:02,802
チームメンバー全員が喜んで使える適切なツールを探しました。

158
00:10:04,136 --> 00:10:07,306
繰り返しの作業とリスクを減らすために、

159
00:10:07,373 --> 00:10:12,578
私たちはテストとプロセスの自動化に可能な限り頼っています。

160
00:10:13,212 --> 00:10:18,084
これら全ての要素が相まって、プロジェクトは成功するのです。

161
00:10:19,418 --> 00:10:24,123
プロジェクトの最初の段階で、ベンダーは

162
00:10:24,357 --> 00:10:28,194
GitHubとそのProjectツールを使ってタスク管理を行いました。

163
00:10:28,594 --> 00:10:30,630
これにより、開発者と私たちは、

164
00:10:30,630 --> 00:10:32,732
プロジェクトマネージャーを通したコミュニケーションだけでなく、

165
00:10:32,798 --> 00:10:35,801
自由にコミュニケーションをとることができるようになりました。

166
00:10:36,435 --> 00:10:40,506
これにより、開発のスピードアップ、作業の透明化、

167
00:10:40,506 --> 00:10:43,009
相互の信頼関係の向上が図られました。

168
00:10:43,709 --> 00:10:47,413
納品後は、Shortcutを導入し、

169
00:10:47,413 --> 00:10:50,816
開発とコンテンツ制作の両タスクを

170
00:10:50,816 --> 00:10:52,385
同じプラットフォームで管理するようにしました。

171
00:10:52,718 --> 00:10:57,657
Shortcutでは、GitHubを統合してプルリクエストの状況を把握し、

172
00:10:57,657 --> 00:11:01,060
開発タスクの状況を同期させることができました。

173
00:11:01,293 --> 00:11:03,863
GitHubはすでに多くの人が知っており、

174
00:11:03,863 --> 00:11:09,835
そのプロジェクト管理ツールはより成熟し、使いやすくなっています。

175
00:11:10,302 --> 00:11:14,774
Shortcutは開発作業と編集作業の両方を

176
00:11:14,774 --> 00:11:17,209
簡単に管理できるタスク管理システムです。

177
00:11:17,510 --> 00:11:19,912
開発と編集のタスクは

178
00:11:19,912 --> 00:11:21,847
それぞれ異なるワークフローを必要とすることから、

179
00:11:21,947 --> 00:11:26,185
Shortcutでそれぞれ異なるワークフローを作成し、

180
00:11:26,352 --> 00:11:31,023
それらを同じEpicやIterationに簡単に取り込むことができます。

181
00:11:31,157 --> 00:11:35,094
これは、複数の機能を持つチームにとって非常に便利な機能です。

182
00:11:35,861 --> 00:11:37,730
Shortcutで Githubと開発タスクのステータスを

183
00:11:37,730 --> 00:11:40,599
素早く同期させることができますね。

184
00:11:41,100 --> 00:11:44,136
別々のプラットフォームでありながら、

185
00:11:44,136 --> 00:11:46,806
両者の間でシームレスに仕事ができるのです。

186
00:11:46,839 --> 00:11:49,308
2人の開発者で構成される開発チームであり、

187
00:11:49,308 --> 00:11:53,179
開発タスクと問題解決に集中する必要があります。

188
00:11:53,479 --> 00:11:57,283
CI/CDプロセスは第3の開発者の役割を果たし、

189
00:11:57,450 --> 00:11:58,517
コーディング標準をチェックし、

190
00:11:58,517 --> 00:12:01,620
私たちに代わってコードをデプロイしてくれます。

191
00:12:01,954 --> 00:12:05,825
これにより、開発者はコードをオンライン開発環境にコミットした後、

192
00:12:05,825 --> 00:12:10,362
次のタスクに素早く移ることができます。

193
00:12:11,130 --> 00:12:13,966
コミットがCI/CDワークフローを通過したら、

194
00:12:14,266 --> 00:12:18,370
あとはプルリクエストでコードのロジックのレビューに専念し、

195
00:12:18,404 --> 00:12:22,875
CI/CDに本番環境へのデプロイを依頼することができるのです。

196
00:12:23,075 --> 00:12:27,346
ツール、スクリプト、そして継続的なコミュニケーションにより、

197
00:12:27,446 --> 00:12:30,416
プロジェクトをスムーズに完了させることができました。

198
00:12:30,716 --> 00:12:33,452
もちろん、勤勉なチームメンバーの存在が、

199
00:12:33,719 --> 00:12:36,989
プロジェクト成功の核となった。

200
00:12:38,190 --> 00:12:43,629
OISTは、職員や学生を含め、メンバーの50％以上が

201
00:12:43,829 --> 00:12:48,000
外国人であるという、日本ではユニークな大学院大学です。

202
00:12:48,400 --> 00:12:52,071
私たちの細胞シグナルユニットもその例にもれず、

203
00:12:52,271 --> 00:12:54,573
第一線の教授陣、研究仲間、

204
00:12:54,573 --> 00:12:57,176
そして学生も世界各国から集まっています。

205
00:12:57,543 --> 00:12:58,744
そのため、

206
00:12:58,911 --> 00:13:02,715
OISTでは英語と日本語が同じくらい重要視されており、

207
00:13:02,782 --> 00:13:08,921
ホームページのコンテンツもほとんどが両言語に翻訳されています。

208
00:13:10,122 --> 00:13:13,793
プロジェクト期間中、私たちは多くの翻訳問題に取り組みました。

209
00:13:13,793 --> 00:13:15,694
本講演の第二部では、

210
00:13:15,694 --> 00:13:19,398
特に日本やAPAC地域の参加者のために、

211
00:13:19,398 --> 00:13:23,435
そのうちのいくつかに焦点を当てたいと思います。

212
00:13:24,270 --> 00:13:27,506
Drupalはコアにしっかりとした翻訳システムを持っています。

213
00:13:27,573 --> 00:13:30,476
あなたの経験や役割に応じて、

214
00:13:30,543 --> 00:13:33,979
翻訳を行う方法は常にあります。

215
00:13:34,480 --> 00:13:35,815
サイト構築者として、

216
00:13:35,881 --> 00:13:39,151
フィールド翻訳を有効にしたノードを翻訳することができます。

217
00:13:39,351 --> 00:13:41,854
また、ユーザーインターフェースに

218
00:13:41,854 --> 00:13:44,290
表示される多くの文字列を翻訳することができます。

219
00:13:44,790 --> 00:13:50,029
TWIGを使って、変数が入った翻訳可能な文章をマークしています。

220
00:13:50,362 --> 00:13:51,597
デベロッパーとして

221
00:13:51,664 --> 00:13:53,332
開発者としては、t() 関数で

222
00:13:53,332 --> 00:13:55,201
翻訳可能な文字列をマークすればいいのです。

223
00:13:55,401 --> 00:14:00,005
文中で動的変数を使用することも可能です。

224
00:14:00,506 --> 00:14:05,211
しかし、単語が動詞であったり名詞であったり、

225
00:14:05,611 --> 00:14:11,150
複数の意味を持つため、翻訳文脈が必要な場合がある。

226
00:14:11,217 --> 00:14:12,218
例えば

227
00:14:12,318 --> 00:14:13,319
"コンタクト"

228
00:14:13,485 --> 00:14:16,956
日本語では2種類の言葉に翻訳されます

229
00:14:17,489 --> 00:14:19,458
アクションとして、「コンタクト」。

230
00:14:19,558 --> 00:14:22,761
セクションラベルとしては、"連絡先 "です。

231
00:14:23,329 --> 00:14:27,366
ユーザーエクスペリエンスのローカライズについては、

232
00:14:27,366 --> 00:14:29,702
最新のDrupalCon Pragueでの私の講演に詳細があります。

233
00:14:30,002 --> 00:14:31,170
もし、あなたが興味を持っていて、

234
00:14:31,170 --> 00:14:33,105
バイリンガルサイトによく携わっているのであれば、

235
00:14:33,105 --> 00:14:34,707
参考になるかと思います。

236
00:14:34,707 --> 00:14:37,009
しかし、今日はプロジェクト特有の、

237
00:14:37,009 --> 00:14:40,713
日本語に関連する問題に焦点を当てたいと思います。

238
00:14:41,146 --> 00:14:43,983
考慮すべき問題のひとつは、日付の形式です

239
00:14:44,383 --> 00:14:46,485
日本や台湾では、

240
00:14:46,986 --> 00:14:52,825
年、月、日の順に記載する形式が一般的です。

241
00:14:53,592 --> 00:14:56,896
海外では、国によって

242
00:14:57,162 --> 00:15:03,836
9月12日とも12月9日とも解釈される日付形式をよく見かけます。

243
00:15:03,836 --> 00:15:07,940
例えば、ヨーロッパの多くの国では12月9日と読みますが、

244
00:15:07,940 --> 00:15:12,811
アメリカでは9月12日と読みます。

245
00:15:13,279 --> 00:15:16,382
OISTのメンバーの多様性を考えると、

246
00:15:16,548 --> 00:15:18,951
情報の理解を一致させるために

247
00:15:18,951 --> 00:15:22,855
共通の方法を見つけなければなりません。

248
00:15:23,989 --> 00:15:27,893
そのため、英語版UIではISO 8601形式を使用します。というのは、

249
00:15:27,893 --> 00:15:31,597
日本語のUIでも同じ順序でフォーマットされているからです

250
00:15:32,331 --> 00:15:36,769
また、日本語、中国語、韓国語の入力も重要な課題です。

251
00:15:36,769 --> 00:15:40,839
CJK言語と呼ばれることもあります。

252
00:15:41,707 --> 00:15:44,643
キーボードでローマ字を打つのは比較的簡単ですが、

253
00:15:44,643 --> 00:15:49,448
CJK言語ではどのように文字を打つのでしょうか。

254
00:15:51,817 --> 00:15:55,421
ここでは、"保健所からCOVID-19陽性の通知を受けたらどうするか "について、

255
00:15:55,421 --> 00:15:59,058
日中韓の言語でいくつかの段落を紹介します。

256
00:15:59,692 --> 00:16:02,695
CJK言語では、

257
00:16:02,695 --> 00:16:05,631
文に空白が入ることはほとんどありません。

258
00:16:05,864 --> 00:16:10,169
内容をインデックス化し、検索しやすくするために、

259
00:16:10,669 --> 00:16:12,938
通常は余分な処理が必要である。

260
00:16:13,539 --> 00:16:17,910
では、日中韓のキーボードはどうなっているのだろうか。

261
00:16:18,177 --> 00:16:19,745
左から右へ

262
00:16:19,812 --> 00:16:23,048
繁体字中国語のキーボードが2つあります。

263
00:16:23,082 --> 00:16:25,651
そして、携帯電話には韓国語キーボードと

264
00:16:25,651 --> 00:16:31,123
日本語キーボードの2つのレイアウト、

265
00:16:31,123 --> 00:16:35,127
つまり50音順のコンパクトなキーボードレイアウトがあります。

266
00:16:35,527 --> 00:16:38,697
知らない人にとっては、

267
00:16:38,897 --> 00:16:40,866
パズルのように見えるかもしれません。

268
00:16:42,368 --> 00:16:45,404
単語を入力する際、キーストロークが異なる。

269
00:16:45,838 --> 00:16:47,373
「コンピュータ」という単語も、

270
00:16:47,973 --> 00:16:54,980
台湾の繁体字中国語と中国の簡体字中国語では異なることがわかる。

271
00:16:55,180 --> 00:16:56,949
日中韓の言語を入力する場合、

272
00:16:56,949 --> 00:17:02,121
すべてのセグメントを入力して初めて1つの単語が完成する。

273
00:17:02,554 --> 00:17:04,456
英語と違って、

274
00:17:04,690 --> 00:17:08,394
入力が完了する前に単語の組み合わせがあるかもしれない。

275
00:17:11,497 --> 00:17:12,664
動画の中では、

276
00:17:13,132 --> 00:17:15,701
日本語の漢字を入力するには

277
00:17:15,801 --> 00:17:19,905
、1～4個、あるいはそれ以上の

278
00:17:19,905 --> 00:17:22,141
発音要素を入力する必要があることが示されています。

279
00:17:22,674 --> 00:17:23,876
さらに、

280
00:17:24,143 --> 00:17:28,981
漢字には同じ読みを持つ異なる単語が存在します。

281
00:17:31,350 --> 00:17:34,520
このため、検索ボックスでは、

282
00:17:35,521 --> 00:17:40,926
実際にキーワードを入力し終わる前に検索が始まってしまい、

283
00:17:41,226 --> 00:17:43,529
ユーザーに迷惑をかけるという問題があります。

284
00:17:44,530 --> 00:17:48,801
この問題は、JavaScriptの特別なイベントメソッドを実装し、

285
00:17:48,801 --> 00:17:52,371
キーワード入力の完了を待ってから

286
00:17:52,538 --> 00:17:55,107
検索をトリガーすることで改善されます。

287
00:18:01,380 --> 00:18:02,648
この動画では、

288
00:18:02,748 --> 00:18:04,583
いくつかの改善が見られました。

289
00:18:06,118 --> 00:18:08,620
英語の入力は正常に行われ、

290
00:18:08,620 --> 00:18:10,956
日本語の「コロナ」は、

291
00:18:10,956 --> 00:18:14,760
単語が完成した時点で初めて検索されることがわかります。

292
00:18:18,530 --> 00:18:24,136
Drupalでは、タグや参照する実体のオートコンプリート欄があります。

293
00:18:24,269 --> 00:18:29,007
コアには以前からこの問題がありましたが、2016年、

294
00:18:29,108 --> 00:18:31,243
Drupalのコントリビューターのおかげで修正されました。

295
00:18:32,010 --> 00:18:37,916
主に、入力が終わった時の特別なイベントを特定するために、

296
00:18:37,916 --> 00:18:40,586
CompositionEventを使用しています。

297
00:18:42,121 --> 00:18:45,023
このカスタムオートコンプリート検索ボックスを作成したとき、

298
00:18:45,023 --> 00:18:47,926
イベントも実装する必要がありました。

299
00:18:48,727 --> 00:18:53,832
まず、CJK入力メソッドの開始位置を検出します。

300
00:18:54,166 --> 00:18:57,669
次に、compositionEndイベントが起こるので、

301
00:18:58,270 --> 00:19:01,773
単語が決定するまで待ちます。

302
00:19:02,407 --> 00:19:05,444
最後に、このAJAXリクエストを送信します。

303
00:19:06,378 --> 00:19:10,249
タイピングの問題に続いて、ソートの問題を見てみましょう。

304
00:19:10,249 --> 00:19:15,854
英語では、記事のタイトル、

305
00:19:15,888 --> 00:19:18,790
分類タグ、名前など、アルファベットを使ってソートすることが多い。

306
00:19:19,024 --> 00:19:24,930
しかし、日本語や中国語でソートする場合は、まったく違います。

307
00:19:25,631 --> 00:19:28,567
日本語では、五十音の順番で並べ替えることは、

308
00:19:28,800 --> 00:19:32,804
ほとんどの人が知っています。

309
00:19:33,739 --> 00:19:37,643
そして、漢字もあります。

310
00:19:38,510 --> 00:19:40,479
ある配列の中に、

311
00:19:40,579 --> 00:19:45,384
アルファベット、数字、ひらがな、カタカナ、

312
00:19:45,551 --> 00:19:46,752
漢字がある場合、

313
00:19:47,019 --> 00:19:48,921
どのようにすれば正しく並べられるのでしょうか。

314
00:19:49,254 --> 00:19:54,026
日本語の理想的な順番は、右のようなものです。

315
00:19:54,259 --> 00:19:57,963
英語のように簡単な数字のアルファベットから始まり、

316
00:19:57,963 --> 00:20:03,335
ひらがな、カタカナ、そして最後に漢字。

317
00:20:03,936 --> 00:20:06,905
ひらがな、カタカナは五十音の順番で並んでいます。

318
00:20:06,905 --> 00:20:09,675
漢字ではどのような順番になるのでしょうか？

319
00:20:10,876 --> 00:20:13,378
sort() 関数を直接使うと、

320
00:20:13,679 --> 00:20:17,082
Unicodeテーブルの各文字の

321
00:20:17,082 --> 00:20:20,586
インデックス番号に基づいて配列がソートされます。

322
00:20:20,752 --> 00:20:23,889
しかし、これは日本語話者にとっては意味がありません。

323
00:20:23,889 --> 00:20:27,226
なぜなら、文字の並び順は

324
00:20:27,226 --> 00:20:30,462
その言語での適切な並び方を反映していないからです。

325
00:20:31,797 --> 00:20:36,435
JavaScriptの関数localeCompare()を使えば、

326
00:20:36,435 --> 00:20:41,306
最初の文字の読み方に基づいて漢字をソートすることができます。

327
00:20:41,406 --> 00:20:45,510
最初の文字が同じなら次の文字も同じにする

328
00:20:45,811 --> 00:20:49,581
PHPにも似たような関数がありますが、

329
00:20:49,581 --> 00:20:52,884
バックエンドでよりよいソート結果を得るには、

330
00:20:52,884 --> 00:20:56,455
データベースクエリを使用することが推奨されます。

331
00:20:58,423 --> 00:21:04,396
しかし、これは完璧ではなく、真ん中の単語が1つだけ間違っています。

332
00:21:05,030 --> 00:21:06,031
岩下

333
00:21:07,599 --> 00:21:11,703
漢字に別の発音があるからです。

334
00:21:11,770 --> 00:21:17,542
最初の文字は「いわ」ではなく、

335
00:21:17,643 --> 00:21:19,278
「がん」と読みます。

336
00:21:21,046 --> 00:21:29,521
もうひとつ、同じ漢字で「かわの」、「こうの」という名字もあります。

337
00:21:30,222 --> 00:21:32,658
日本語でも中国語でも、

338
00:21:32,658 --> 00:21:36,528
この漢字は複数の発音を持つことができるんですね。

339
00:21:37,629 --> 00:21:40,832
複数の発音を持つ文字はいくつあるのでしょうか？

340
00:21:40,899 --> 00:21:45,637
日本には2,000ある文字のうち、

341
00:21:45,637 --> 00:21:49,174
600以上の文字が複数の読み方を持っています。

342
00:21:50,008 --> 00:21:54,279
台湾の教育部による公式定義では

343
00:21:54,613 --> 00:22:01,086
一般的に使用される繁体字中国語は5,000字中1,263字であった。

344
00:22:02,087 --> 00:22:04,156
10年ほど前に、

345
00:22:04,289 --> 00:22:07,326
その多くを見直し、統合して

346
00:22:07,326 --> 00:22:11,096
580字に減らした。

347
00:22:11,863 --> 00:22:15,067
漢字を例にしてみましょう。

348
00:22:15,200 --> 00:22:19,638
文化的背景が異なるため、より多くの発音がある。

349
00:22:19,638 --> 00:22:20,906
そのうちの4つは、

350
00:22:20,906 --> 00:22:25,043
様々な時代の古代中国から受け継いだ音読であり、

351
00:22:25,744 --> 00:22:30,015
もう4つは本来の日本語の訓読を表している。

352
00:22:31,316 --> 00:22:34,920
元の中国語漢字はよく似ていて、

353
00:22:35,053 --> 00:22:37,189
3つの発音がある。

354
00:22:37,923 --> 00:22:41,193
この文字は、「音楽」を表す樂（ユエ）、

355
00:22:41,193 --> 00:22:43,929
「幸せ・幸福」を表す樂（ル）、

356
00:22:43,929 --> 00:22:47,599
「鑑賞する」という動詞を表す樂（ヤオ）の頭文字をとったものである。

357
00:22:50,068 --> 00:22:51,236
これで

358
00:22:51,470 --> 00:22:55,907
日本語の発音順がわかりましたね。繁体字中国語はどうでしょうか。

359
00:22:56,274 --> 00:22:58,910
それでは、台湾の美味しいものを紹介しましょう。

360
00:22:59,177 --> 00:23:00,746
私の好きな順に

361
00:23:00,946 --> 00:23:02,581
並べてみました。

362
00:23:03,215 --> 00:23:06,385
では、属性を使って名前を並べ替えるにはどうしたらいいのでしょう？

363
00:23:06,885 --> 00:23:09,721
まず、どのような方法があるか見てみましょう。

364
00:23:11,189 --> 00:23:14,059
これは岩国の一文字

365
00:23:14,226 --> 00:23:15,627
繁体字中国語で "イェン"。

366
00:23:16,395 --> 00:23:19,398
少なくとも4種類の並べ方があります。

367
00:23:19,765 --> 00:23:22,434
部首の画数を数える方法、

368
00:23:22,801 --> 00:23:24,369
総画数を数える方法、

369
00:23:24,469 --> 00:23:27,739
台湾でのみ使われている

370
00:23:27,739 --> 00:23:30,442
音素注音で表記する方法、

371
00:23:30,942 --> 00:23:33,745
または中国での主な入力方法であるローマ字による

372
00:23:33,745 --> 00:23:37,215
ピンインで表記する方法である。

373
00:23:38,517 --> 00:23:42,387
通常はいずれかの属性で並び替えを行うが、

374
00:23:42,554 --> 00:23:45,924
図書館の蔵書検索システムのように、

375
00:23:45,924 --> 00:23:49,461
ユーザーが並び替えの方法を変更できるようにすることもある。

376
00:23:50,962 --> 00:23:52,364
繁体字中国語では、

377
00:23:52,364 --> 00:23:58,003
localeCompare() は先に述べた様々な属性とも連動します。

378
00:23:58,336 --> 00:23:59,538
画数で、

379
00:23:59,938 --> 00:24:01,973
または音声注音で。

380
00:24:02,808 --> 00:24:05,610
これは音韻の要素である注音でソートしています。

381
00:24:05,610 --> 00:24:09,314
五十音で日本語をソートするのと同じようなものです。

382
00:24:09,948 --> 00:24:13,618
注音を理解しないと、理解するのは難しいでしょう。

383
00:24:14,386 --> 00:24:16,154
でも、別の方法はもっと簡単です。

384
00:24:16,221 --> 00:24:18,757
これは総画数でソートしています。

385
00:24:19,191 --> 00:24:21,927
左から右へ、最初の文字の

386
00:24:21,993 --> 00:24:24,996
ストロークが多くなっているのがわかります。

387
00:24:25,464 --> 00:24:28,200
JavaScriptがサポートされてるのがすごいよね。

388
00:24:28,266 --> 00:24:31,036
これはオープンソースの貢献者のおかげです。

389
00:24:31,036 --> 00:24:33,705
特にUniHanプロジェクトは、

390
00:24:33,738 --> 00:24:38,543
ユニコードのオープンソースプロジェクトの一つです。

391
00:24:38,743 --> 00:24:40,912
そのおかげで、これが使えるようになったんです。

392
00:24:41,746 --> 00:24:44,049
そこで、未解決の問題を考えてみよう。

393
00:24:44,049 --> 00:24:48,153
多読漢字をどうするか？

394
00:24:48,753 --> 00:24:51,022
この問題は、日本語の漢字、

395
00:24:51,022 --> 00:24:53,358
あるいは漢字を発音要素の注音やピンインで

396
00:24:53,358 --> 00:24:56,661
並べ替えたときに発生する。

397
00:24:57,429 --> 00:24:59,164
技術的には、ネイティブスピーカーは、

398
00:24:59,164 --> 00:25:01,967
一般的な発音のバリエーションを知っており、

399
00:25:02,033 --> 00:25:05,237
頭の中で処理する際、一緒に処理されるため、

400
00:25:06,037 --> 00:25:11,276
異なる発音が混在していても、ネイティブスピーカーは

401
00:25:11,576 --> 00:25:13,712
あまり気にならないのである。

402
00:25:14,346 --> 00:25:17,115
ただし、私の認識が間違っている可能性もありますので、

403
00:25:17,282 --> 00:25:22,354
具体的な解決策をお聞かせいただければと思います。

404
00:25:23,188 --> 00:25:28,627
もし、クライアントが明示的な順序を要求してきた場合は、

405
00:25:28,860 --> 00:25:31,263
あらかじめ定義されたテーブルや配列に単語を

406
00:25:31,263 --> 00:25:34,299
マッピングするのが良い方法です。

407
00:25:37,469 --> 00:25:40,438
最後に、ある一文を紹介したい。

408
00:25:40,772 --> 00:25:42,307
"Devil is in the details"

409
00:25:42,407 --> 00:25:44,342
という言葉を耳にすることがある。

410
00:25:44,576 --> 00:25:47,512
この意味は、「細部にまで目を向けないと、

411
00:25:47,512 --> 00:25:50,782
困難や問題は見えてこない」というものである。

412
00:25:51,616 --> 00:25:54,686
文の成り立ちが何となく逆なんですよね。

413
00:25:55,787 --> 00:25:57,689
"神は細部に宿る"

414
00:25:58,456 --> 00:25:59,958
ドイツの建築家、

415
00:26:00,025 --> 00:26:02,394
ミース・ファン・デル・ローエの言葉です。

416
00:26:02,794 --> 00:26:05,196
"Der liebe Gott steckt im detail" である。

417
00:26:05,764 --> 00:26:08,166
悪魔でも神でも、

418
00:26:08,567 --> 00:26:10,936
この文に共通することは一つ。

419
00:26:11,136 --> 00:26:15,006
一番大事なことは、細かいところにある。

420
00:26:15,674 --> 00:26:20,478
新しいサイトが完成したとき、人々は歓声を上げ、満足感を覚えます。

421
00:26:20,779 --> 00:26:23,648
そして、そのウェブサイトを訪れた人が、

422
00:26:23,648 --> 00:26:25,850
自分の言語で直感的に操作できることに喜びを感じるとき。

423
00:26:26,284 --> 00:26:33,058
それは、開発者・デザイナーが最高のUXを実現するために、

424
00:26:33,224 --> 00:26:35,360
細部にまでこだわっているからです。

425
00:26:35,560 --> 00:26:38,697
そして、よく見て、チャレンジして、

426
00:26:38,863 --> 00:26:40,298
悪魔と取引して、

427
00:26:40,398 --> 00:26:43,702
最後には輝かしい奇跡を見つけましょう。

428
00:26:45,070 --> 00:26:50,408
どうも、クリスです。今日は以下のセッションで良い午後を過ごせますように。

429
00:26:50,875 --> 00:26:53,044
ご清聴ありがとうございました。
